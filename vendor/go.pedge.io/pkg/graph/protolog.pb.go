// Code generated by protoc-gen-go.
// source: graph/protolog.proto
// DO NOT EDIT!

package pkggraph

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type NodeWaiting struct {
	Node       string `protobuf:"bytes,1,opt,name=node" json:"node,omitempty"`
	ParentNode string `protobuf:"bytes,2,opt,name=parent_node" json:"parent_node,omitempty"`
}

func (m *NodeWaiting) Reset()         { *m = NodeWaiting{} }
func (m *NodeWaiting) String() string { return proto.CompactTextString(m) }
func (*NodeWaiting) ProtoMessage()    {}

type NodeFinishedWaiting struct {
	Node        string `protobuf:"bytes,1,opt,name=node" json:"node,omitempty"`
	ParentError string `protobuf:"bytes,2,opt,name=parent_error" json:"parent_error,omitempty"`
}

func (m *NodeFinishedWaiting) Reset()         { *m = NodeFinishedWaiting{} }
func (m *NodeFinishedWaiting) String() string { return proto.CompactTextString(m) }
func (*NodeFinishedWaiting) ProtoMessage()    {}

type NodeStarting struct {
	Node string `protobuf:"bytes,1,opt,name=node" json:"node,omitempty"`
}

func (m *NodeStarting) Reset()         { *m = NodeStarting{} }
func (m *NodeStarting) String() string { return proto.CompactTextString(m) }
func (*NodeStarting) ProtoMessage()    {}

type NodeFinished struct {
	Node  string `protobuf:"bytes,1,opt,name=node" json:"node,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *NodeFinished) Reset()         { *m = NodeFinished{} }
func (m *NodeFinished) String() string { return proto.CompactTextString(m) }
func (*NodeFinished) ProtoMessage()    {}

type NodeSending struct {
	Node      string `protobuf:"bytes,1,opt,name=node" json:"node,omitempty"`
	ChildNode string `protobuf:"bytes,2,opt,name=child_node" json:"child_node,omitempty"`
	Error     string `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *NodeSending) Reset()         { *m = NodeSending{} }
func (m *NodeSending) String() string { return proto.CompactTextString(m) }
func (*NodeSending) ProtoMessage()    {}
